{"version":3,"sources":["components/TableComponent.jsx","components/Profile.jsx","components/PostCard.jsx","components/Post.jsx","SlideDrawer/SlideDrawer.jsx","SlideDrawer/Backdrop.jsx","App.js","reportWebVitals.js","index.js"],"names":["TableComponent","_ref","users","toggle","getUserProfile","_useState","useState","user","displayProfile","displayPost","_useState2","Object","slicedToArray","userProfile","setUserProfile","useEffect","react_default","a","createElement","Fragment","className","map","key","id","name","username","email","phone","website","href","onClick","prevState","objectSpread","Profile","userData","_userData$address","address","street","suite","city","zipcode","htmlFor","type","value","concat","company","PostCard","post","title","userId","body","Post","posts","setPosts","fetch","then","res","json","data","catch","e","console","log","message","components_PostCard","SlideDrawer","show","drawerClasses","components_Profile","components_Post","Backdrop","close","App","backdrop","setUsers","_useState3","_useState4","drawerOpen","setDrawerOpen","_useState5","_useState6","src_SlideDrawer_Backdrop","components_TableComponent","src_SlideDrawer_SlideDrawer","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7772d079.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport \"../Styles/TableComponent.css\";\r\n\r\nconst TableComponent = ({ users, toggle, getUserProfile }) => {\r\n  const [userProfile, setUserProfile] = useState({\r\n    user: {},\r\n    displayProfile: false,\r\n    displayPost: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getUserProfile(userProfile);\r\n  }, [userProfile]);\r\n\r\n  return (\r\n    <>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>User Name</th>\r\n            <th>Email</th>\r\n            <th>Phone</th>\r\n            <th>Website</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user) => {\r\n            return (\r\n              <tr key={user.id}>\r\n                <td>{user.name}</td>\r\n                <td>{user.username}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.phone}</td>\r\n                <td>{user.website}</td>\r\n                <td>\r\n                  <a\r\n                    href=\"#\"\r\n                    onClick={() => {\r\n                      toggle();\r\n                      setUserProfile((prevState) => ({\r\n                        ...prevState,\r\n                        user: user,\r\n                        displayPost: false,\r\n                        displayProfile: true,\r\n                      }));\r\n                    }}\r\n                  >\r\n                    View Profile\r\n                  </a>\r\n                </td>\r\n\r\n                <td>\r\n                  <a\r\n                    href=\"#\"\r\n                    onClick={() => {\r\n                      toggle();\r\n                      setUserProfile((prevState) => ({\r\n                        ...prevState,\r\n                        user: user,\r\n                        displayProfile: false,\r\n                        displayPost: true,\r\n                      }));\r\n                    }}\r\n                  >\r\n                    View Post\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* {userProfile.displayProfile ? (\r\n        <Profile userData={userProfile.user} />\r\n      ) : null}\r\n\r\n      {userProfile.displayPost ? <Post userId={userProfile.user.id} /> : null} */}\r\n    </>\r\n  );\r\n};\r\nexport default TableComponent;\r\n","import React from \"react\";\r\nimport \"../Styles/Profile.css\";\r\n\r\nconst Profile = ({ userData }) => {\r\n  const { street, suite, city, zipcode } = userData.address;\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <h2>Profile</h2>\r\n      <h3>{userData.name}</h3>\r\n      <h4>{userData.username}</h4>\r\n\r\n      <form>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <div>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            className=\"profile-input\"\r\n            value={userData.email}\r\n          />\r\n        </div>\r\n\r\n        <label htmlFor=\"address\">Address</label>\r\n        <div>\r\n          <input\r\n            className=\"profile-input\"\r\n            type=\"text\"\r\n            id=\"address\"\r\n            value={`${street},${suite},${city},${zipcode}`}\r\n          ></input>\r\n        </div>\r\n\r\n        <label htmlFor=\"phone\">Phone</label>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            id=\"phone\"\r\n            className=\"profile-input\"\r\n            value={userData.phone}\r\n          ></input>\r\n        </div>\r\n\r\n        <label htmlFor=\"website\">Website</label>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            id=\"website\"\r\n            className=\"profile-input\"\r\n            value={userData.website}\r\n          ></input>\r\n        </div>\r\n\r\n        <label htmlFor=\"company\">Company Name</label>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            id=\"company\"\r\n            className=\"profile-input\"\r\n            value={userData.company.name}\r\n          ></input>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport \"../Styles/PostCard.css\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const { userId, id, title, body } = post;\r\n\r\n  return (\r\n    <div className=\"postcard\">\r\n      <h3>{title}</h3>\r\n      <p>{body}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default PostCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PostCard from \"./PostCard\";\r\n\r\nconst Post = ({ userId, name }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const fetchPosts = () => {\r\n    fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setPosts(data))\r\n      .catch((e) => console.log(e.message));\r\n  };\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, [userId]);\r\n\r\n  return (\r\n    <>\r\n      <h2>Post</h2>\r\n      <h4>{name}</h4>\r\n      {posts.map((post) => (\r\n        <PostCard post={post} key={post.id} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nexport default Post;\r\n","import \"./SlideDrawer.css\";\r\nimport React, { useState } from \"react\";\r\nimport Profile from \"../components/Profile\";\r\nimport Post from \"../components/Post\";\r\n\r\nconst SlideDrawer = ({ show, userProfile }) => {\r\n  let drawerClasses = \"side-drawer\";\r\n  if (show) {\r\n    drawerClasses = \"side-drawer open\";\r\n  }\r\n\r\n  const renderProfilePost = () => {\r\n    if (userProfile.displayProfile) {\r\n      return <Profile userData={userProfile.user} />;\r\n    } else if (userProfile.displayPost) {\r\n      return <Post userId={userProfile.user.id} name={userProfile.user.name} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  return <div className={drawerClasses}>{renderProfilePost()}</div>;\r\n};\r\n\r\nexport default SlideDrawer;\r\n","import React from \"react\";\r\nimport \"./Backdrop.css\";\r\nconst Backdrop = ({ close }) => {\r\n  return <div className=\"backdrop\" onClick={close} />;\r\n};\r\nexport default Backdrop;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TableComponent from \"./components/TableComponent\";\n\nimport MainPage from \"./components/MainPage.jsx\";\nimport SlideDrawer from \"./SlideDrawer/SlideDrawer.jsx\";\nimport Backdrop from \"./SlideDrawer/Backdrop.jsx\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [userProfile, setUserProfile] = useState({\n    user: {},\n    displayProfile: false,\n    displayPost: false,\n  });\n\n  const fetchUsers = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((data) => setUsers(data))\n      .catch((e) => console.log(e.message));\n  };\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  function drawerToggleClickHandler() {\n    setDrawerOpen(!drawerOpen);\n  }\n\n  function backdropClickHandler() {\n    setDrawerOpen(false);\n  }\n\n  const getUserProfile = (userData) => {\n    setUserProfile(userData);\n  };\n\n  let backdrop;\n  if (drawerOpen) {\n    backdrop = <Backdrop close={backdropClickHandler} />;\n  }\n\n  return (\n    <div className=\"app\">\n      <h2>Table</h2>\n      <TableComponent\n        users={users}\n        toggle={drawerToggleClickHandler}\n        getUserProfile={getUserProfile}\n      />\n\n      <SlideDrawer show={drawerOpen} userProfile={userProfile} />\n      {backdrop}\n      {/* <MainPage toggle={drawerToggleClickHandler} /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}